{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/modules/employees/employee-list/employee-list.component.css","webpack:///./src/app/modules/employees/employee-list/employee-list.component.html","webpack:///./src/app/modules/employees/employee-list/employee-list.component.ts","webpack:///./src/app/modules/employees/employee/employee.component.css","webpack:///./src/app/modules/employees/employee/employee.component.html","webpack:///./src/app/modules/employees/employee/employee.component.ts","webpack:///./src/app/modules/employees/employees.module.ts","webpack:///./src/app/modules/shared/employee.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ngx-spinner></ngx-spinner>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <h2 style=\\\"text-align: center; color:blue\\\">Angular CRUD Application</h2>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <app-employee></app-employee>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <app-employee-list></app-employee-list>\\n    </div>\\n  </div>\\n  \\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-json-crud';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { EmployeesModule } from './modules/employees/employees.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { EmployeeService } from './modules/shared/employee.service';\nimport { FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    EmployeesModule,\n    HttpClientModule,\n    FormsModule,\n    ToastrModule.forRoot() ,\n    NgxSpinnerModule\n   \n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  ToastrModule\n }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWVzL2VtcGxveWVlLWxpc3QvZW1wbG95ZWUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <tr *ngFor=\\\"let emp of employeeService.allEmployee\\\">\\n    <td>{{emp.firstName}}</td>\\n    <td>{{emp.lastName}}</td>\\n    <td>{{emp.designation}}</td>\\n    <td>\\n      <a class=\\\"btn\\\">\\n        <i class=\\\"fa fa-edit\\\" (click)=\\\"edit(emp)\\\"></i>\\n      </a>\\n    </td>\\n    <td>\\n      <a class=\\\"btn text-danger\\\">\\n        <i class=\\\"fa fa-trash\\\" (click)=\\\"deleteEmployee(emp.id)\\\"></i>\\n      </a>\\n    </td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../../shared/employee.service';\nimport { Employee } from 'src/app/model/employee.model';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n\n  constructor(\n    private employeeService: EmployeeService,\n    private toastrService: ToastrService\n    ) { }\n\n  ngOnInit() {\n    this.getAllEmployee()\n  }\n\n  getAllEmployee() {\n    this.employeeService.getAllEmployees();\n  }\n\n  deleteEmployee(id: number) {\n    console.log(id);\n    this.employeeService.deleteEmployee(id).subscribe(\n      (data: Employee) => {\n          this.getAllEmployee();\n      });\n   this.toastrService.info(\"Employee deleted successfully\");\n\n  }\n\n  edit(emp) {\n   this.employeeService.currentEmployee = Object.assign({} , emp); \n  }\n      \n      \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZW1wbG95ZWVzL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 form-group\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"First name\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"employeeService.currentEmployee.firstName\\\">\\n  </div>\\n  <div class=\\\"col-md-6 form-group\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"Last name\\\"  name=\\\"lastName\\\" class=\\\"form-control \\\"  [(ngModel)]=\\\"employeeService.currentEmployee.lastName\\\">\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12 form-group\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"Designation\\\" name=\\\"designation\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"employeeService.currentEmployee.designation\\\">\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 form-group\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"Contact\\\" name=\\\"contact\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"employeeService.currentEmployee.contact\\\">\\n  </div>\\n  <div class=\\\"col-md-6 form-group\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"Address\\\" name=\\\"address\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"employeeService.currentEmployee.address\\\">\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <button class=\\\"btn btn-success  btn-block btn-lg\\\" (click)=\\\"createAndUpdate(this.employeeService.currentEmployee)\\\"> <i class=\\\"fa fa-save\\\">SAVE</i> </button>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <button class=\\\"btn btn-primary btn-block btn-lg \\\" (click)=\\\"clearEmployee()\\\"> <i class=\\\"fa fa-retweet\\\">CLEAR</i> </button>\\n  </div>\\n</div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../../shared/employee.service';\nimport { Employee } from 'src/app/model/employee.model';\n import { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(\n    private employeeService: EmployeeService,\n     private toastrService: ToastrService\n    ) { }\n\n  ngOnInit() {\n  }\n\n  createAndUpdate(employees: Employee) {\n    console.log(employees);\n    if(employees.id != null){\n      console.log('Update!');\n      this.updateEmployee(employees);\n      this.employeeService.getAllEmployees();\n    }\n    else {\n      console.log(\"create!\");\n      this.createEmployee(employees);\n    }\n  }\n\n  createEmployee(emp : Employee) {\n    this.employeeService.createEmployee(emp).subscribe(\n      (data: Employee) => {\n            this.employeeService.getAllEmployees();\n      });\n   this.toastrService.success(\"Employee Created successfully\");\n  }\n\nupdateEmployee(emp: Employee) {\n  this.employeeService.updateEmployee(emp).subscribe(\n    (data: Employee) => {\n      this.employeeService.getAllEmployees();\n    });\n  this.toastrService.info(\" Updated successfully\");\n}\n\nclearEmployee() {\n  this.employeeService.currentEmployee = {\n    firstName: '',\n    lastName: '',\n    designation: '',\n    contact: null,\n    id: null,\n    address: ''\n  }\n  this.toastrService.error(\" cleared successfully\");\n  \n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [EmployeeComponent, EmployeeListComponent],\n  exports: [EmployeeComponent, EmployeeListComponent]\n})\nexport class EmployeesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Employee } from 'src/app/model/employee.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nconst headerOption = {\n  headers: new HttpHeaders({ 'Content:Type': 'application/json' })\n};\n\n@Injectable()\nexport class EmployeeService {\n\n  mockUrl = \"http://localhost:3000/Employee\";\n  allEmployee: Employee[];\n\n  currentEmployee: Employee = {\n    firstName: '',\n    lastName: '',\n    designation: '',\n    contact: null,\n    id: null,\n    address: ''\n  }\n\n  constructor(\n    private http: HttpClient,\n    private ngxSpinnerService: NgxSpinnerService\n    ) { }\n\n  getAllEmployees() {\n    this.ngxSpinnerService.show();\n    setTimeout( () => {\n      this.ngxSpinnerService.hide();\n    }, 500 ); \n    return this.http.get(this.mockUrl).subscribe(\n      (data:Employee[]) => {\n        this.allEmployee = data;\n        console.log(this.allEmployee);\n      });\n  }\n\n  deleteEmployee(id: number): Observable<Employee> {\n    return this.http.delete<Employee>(this.mockUrl + '/' + id);\n  }\n\n  createEmployee(emp: Employee) : Observable<Employee>{\n    return this.http.post<Employee>(this.mockUrl, emp)\n  }\n\n  updateEmployee(emp : Employee) : Observable<Employee>{\n    return this.http.put<Employee>(this.mockUrl + '/' + emp.id , emp)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}